MODULE main

DEFINE
    n_floors := 4;

VAR
    cur_floor: 1 .. n_floors;
    floor_src: 0 .. n_floors;
    buttons: array 1 .. n_floors of 0 .. n_floors;
    buttons_latch: array 1 .. n_floors of 0 .. n_floors;

    queue_src: array 1 .. n_floors of 0 .. n_floors;
    queue_dst: array 1 .. n_floors of 0 .. n_floors;
    queue_tail: 1 .. n_floors;
    in_queue: array 1 .. n_floors of boolean;
    
ASSIGN
    init(buttons[1]) := 0;
    init(buttons[2]) := 0;
    init(buttons[3]) := 0;
    init(buttons[4]) := 0;

    init(buttons_latch[1]) := 0;
    init(buttons_latch[2]) := 0;
    init(buttons_latch[3]) := 0;
    init(buttons_latch[4]) := 0;

    init(queue_src[1]) := 0;
    init(queue_src[2]) := 0;
    init(queue_src[3]) := 0;
    init(queue_src[4]) := 0;
    
    init(queue_tail) := 1;

    in_queue[1] := (queue_src[1] = 1) | (queue_src[2] = 1) | (queue_src[3] = 1) | (queue_src[4] = 1);
    in_queue[2] := (queue_src[1] = 2) | (queue_src[2] = 2) | (queue_src[3] = 2) | (queue_src[4] = 2);
    in_queue[3] := (queue_src[1] = 3) | (queue_src[2] = 3) | (queue_src[3] = 3) | (queue_src[4] = 3);
    in_queue[4] := (queue_src[1] = 4) | (queue_src[2] = 4) | (queue_src[3] = 4) | (queue_src[4] = 4);

    floor_src := case
        (buttons_latch[1] != 0) & (!in_queue[1]): 1;
        (buttons_latch[2] != 0) & (!in_queue[2]): 2;
        (buttons_latch[3] != 0) & (!in_queue[3]): 3;
        (buttons_latch[4] != 0) & (!in_queue[4]): 4;
        TRUE: 0;
    esac;

    next(buttons_latch[1]) := case
        TRUE: case
            buttons_latch[1] != 0: buttons_latch[1];
            TRUE: buttons[1];
        esac;
    esac;
    next(buttons_latch[2]) := case
        TRUE: case
            buttons_latch[2] != 0: buttons_latch[2];
            TRUE: buttons[2];
        esac;
    esac;
    next(buttons_latch[3]) := case
        TRUE: case
            buttons_latch[3] != 0: buttons_latch[3];
            TRUE: buttons[3];
        esac;
    esac;
    next(buttons_latch[4]) := case
        TRUE: case
            buttons_latch[4] != 0: buttons_latch[4];
            TRUE: buttons[4];
        esac;
    esac;

    next(queue_tail) := case
        cur_floor = queue_src[1]: case
            floor_src != 0: queue_tail;
            queue_tail = 1: 1;
            TRUE: queue_tail - 1;
        esac;
        floor_src != 0: case
            queue_tail = 4: 4;
            TRUE: queue_tail + 1;
        esac;
        TRUE: queue_tail;
    esac;

    next(queue_src[1]) := case
        (queue_tail = 1) & (floor_src != 0) & !(cur_floor = queue_src[1]): floor_src;
        TRUE: case
            cur_floor = queue_src[1]: case
                (queue_tail = 2) & (floor_src != 0): floor_src;
                TRUE: queue_src[2];
            esac;
            TRUE: queue_src[1];
        esac;
    esac;
    next(queue_src[2]) := case
        (queue_tail = 2) & (floor_src != 0) & !(cur_floor = queue_src[1]): floor_src;
        TRUE: case
            cur_floor = queue_src[1]: case
                (queue_tail = 3) & (floor_src != 0): floor_src;
                TRUE: queue_src[3];
            esac;
            TRUE: queue_src[2];
        esac;
    esac;
    next(queue_src[3]) := case
        (queue_tail = 3) & (floor_src != 0) & !(cur_floor = queue_src[1]): floor_src;
        TRUE: case
            cur_floor = queue_src[1]: case
                (queue_tail = 4) & (floor_src != 0): floor_src;
                TRUE: queue_src[4];
            esac;
            TRUE: queue_src[3];
        esac;
    esac;
    next(queue_src[4]) := case
        (queue_tail = 4) & (floor_src != 0) & !(cur_floor = queue_src[1]): floor_src;
        TRUE: case
            cur_floor = queue_src[1]: case
                TRUE: 0;
            esac;
            TRUE: queue_src[4];
        esac;
    esac;

    next(cur_floor) := case
        cur_floor = queue_src[1]: case
            buttons_latch[queue_src[1]] != 0: buttons_latch[queue_src[1]];
            TRUE: cur_floor;
        esac;
        TRUE: case 
            queue_src[1] != 0: queue_src[1];
            TRUE: cur_floor;
        esac;
    esac;

INVAR
    buttons[1] != 1;
INVAR
    buttons[2] != 2;
INVAR
    buttons[3] != 3;
INVAR
    buttons[4] != 4;

SPEC
    AG (((buttons_latch[1] != 2) & AX (buttons_latch[1] = 2)) -> (AF (cur_floor = 1 & AF (cur_floor = 2))))

SPEC
    AG ((((buttons_latch[1] != 2) & AX (buttons_latch[1] = 2)) & AF ((buttons_latch[3] != 4) & AX (buttons_latch[3] = 4))) ->
        (AF ((cur_floor = 1 & AF (cur_floor = 2)) & AF (cur_floor = 3 & AF (cur_floor = 4)))))
    